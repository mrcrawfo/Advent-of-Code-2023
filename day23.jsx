const input1 = [
    '#.#####################',
    '#.......#########...###',
    '#######.#########.#.###',
    '###.....#.>.>.###.#.###',
    '###v#####.#v#.###.#.###',
    '###.>...#.#.#.....#...#',
    '###v###.#.#.#########.#',
    '###...#.#.#.......#...#',
    '#####.#.#.#######.#.###',
    '#.....#.#.#.......#...#',
    '#.#####.#.#.#########v#',
    '#.#...#...#...###...>.#',
    '#.#.#v#######v###.###v#',
    '#...#.>.#...>.>.#.###.#',
    '#####v#.#.###v#.#.###.#',
    '#.....#...#...#.#.#...#',
    '#.#########.###.#.#.###',
    '#...###...#...#...#.###',
    '###.###.#.###v#####v###',
    '#...#...#.#.>.>.#.>.###',
    '#.###.###.#.###.#.#v###',
    '#.....###...###...#...#',
    '#####################.#',
];

const input2 = [
    '#.###########################################################################################################################################',
    '#.....###...###...#...###...#...###...#...###...###...#...#.........###...###...#.......#...###...#...#...###.....#...#.....#...#...#...#...#',
    '#####.###.#.###.#.#.#.###.#.#.#.###.#.#.#.###.#.###.#.#.#.#.#######.###.#.###.#.#.#####.#.#.###.#.#.#.#.#.###.###.#.#.#.###.#.#.#.#.#.#.#.#.#',
    '#.....#...#...#.#.#.#.#...#.#.#.#...#.#.#...#.#...#.#.#.#.#.#.......#...#...#.#.#.#.....#.#.#...#.#.#...#...#...#.#.#.#...#.#.#.#.#.#.#.#.#.#',
    '#.#####.#####.#.#.#.#.#.###.#.#.#.###.#.###.#.###.#.#.#.#.#.#.#######.#####.#.#.#.#.#####.#.#.###.#.#######.###.#.#.#.###.#.#.#.#.#.#.#.#.#.#',
    '#.#...#...#...#.#.#.#.#...#.#.#.#...#.#.#...#...#.#.#.#.#.#.#.#...###.....#.#.#...#...#...#.#...#.#.....#...#...#.#.#.#...#...#.#.#.#.#.#.#.#',
    '#.#.#.###.#.###.#.#.#.###.#.#.#.###.#.#.#.#####.#.#.#.#.#.#.#.#.#.#######.#.#.#######.#.###.###.#.#####.#.###.###.#.#.#.#######.#.#.#.#.#.#.#',
    '#.#.#.#...#...#.#...#.#...#...#.#...#.#.#.>.>.#.#.#.#.#.#.#.#...#.>.>.#...#.#.#.......#.#...#...#.#.>.>.#.....#...#.#.#.#.......#.#.#.#.#.#.#',
    '#.#.#.#.#####v#.#####.#.#######.#.###.#.###v#.#.#.#.#.#.#.#.#######v#.#.###.#.#.#######.#.###.###.#.#v#########.###.#.#.#.#######.#.#.#.#.#.#',
    '#...#.#.#...#.>.#.....#.....#...#.#...#.#...#...#.#.#.#.#.#.#.....#.#.#...#...#.#...#...#.....###.#.#.#.....###.....#.#.#.....###.#.#.#.#.#.#',
    '#####.#.#.#.#v###.#########.#.###.#.###.#.#######.#.#.#.#.#.#.###.#.#.###.#####.#.#.#.###########.#.#.#.###.#########.#.#####.###.#.#.#.#.#.#',
    '#...#...#.#.#...#...#...#...#...#.#.#...#.......#.#.#.#.#.#.#...#...#.#...###...#.#.#.....#...###...#...###.........#.#.#...#...#.#.#.#.#.#.#',
    '#.#.#####.#.###.###.#.#.#.#####.#.#.#.#########.#.#.#.#.#.#.###.#####.#.#####.###.#.#####.#.#.#####################.#.#.#.#.###.#.#.#.#.#.#.#',
    '#.#...###.#.....#...#.#.#...###...#.#.#.........#...#.#.#...###.....#...#...#.....#.....#...#.......#.......#.......#...#.#.....#.#.#.#.#.#.#',
    '#.###.###.#######.###.#.###.#######.#.#.#############.#.###########.#####.#.###########.###########.#.#####.#.###########.#######.#.#.#.#.#.#',
    '#...#...#...#...#.....#.#...#.......#.#.#.......#...#...###.........#.....#.............#.........#.#.....#...#...#...###.#.....#.#.#.#.#.#.#',
    '###.###.###.#.#.#######.#.###.#######.#.#.#####.#.#.#######.#########.###################.#######.#.#####.#####.#.#.#.###.#.###.#.#.#.#.#.#.#',
    '###...#.###...#.....###.#...#.........#...#...#...#...#.....#.......#.....#.....#...>.>.#.......#...#...#...#...#...#...#.#.###...#...#...#.#',
    '#####.#.###########.###.###.###############.#.#######.#.#####.#####.#####.#.###.#.###v#.#######.#####.#.###.#.#########.#.#.###############.#',
    '#...#.#...........#...#.....###...#.........#.......#.#.......#...#.#.....#.#...#.#...#...#...#...#...#.....#.#.......#.#.#.#.............#.#',
    '#.#.#.###########.###.#########.#.#.###############.#.#########.#.#.#.#####.#.###.#.#####.#.#.###.#.#########.#.#####.#.#.#.#.###########.#.#',
    '#.#...#.........#.#...#.....#...#.#...............#.#.#.........#...#.......#.#...#.#...#.#.#.#...#.......#...#.....#.#.#.#.#...#...#...#...#',
    '#.#####.#######.#.#.###.###.#.###.###############.#.#.#.#####################.#.###.#.#.#.#.#.#.#########.#.#######.#.#.#.#.###.#.#.#.#.#####',
    '#.#...#.#.......#...###...#.#...#.#...............#...#.........#.....#.....#...#...#.#.#...#.#.#.........#.#.......#...#...###...#...#.....#',
    '#.#.#.#.#.###############.#.###.#.#.###########################.#.###.#.###.#####.###.#.#####.#.#.#########.#.#############################.#',
    '#...#...#.....#...#...#...#.....#.#...........#...###...###.....#.#...#.#...#...#.....#.....#.#.#...#.......#.............###...###...#.....#',
    '#############.#.#.#.#.#.#########.###########.#.#.###.#.###.#####.#.###.#.###.#.###########.#.#.###.#.###################.###.#.###.#.#.#####',
    '#.............#.#.#.#.#...#.......#...#.......#.#...#.#...#.......#.....#.#...#.............#...###...#...................#...#.#...#.#.....#',
    '#.#############.#.#.#.###.#.#######.#.#.#######.###.#.###.###############.#.###########################.###################.###.#.###.#####.#',
    '#.........#...#.#.#.#.###.#.#...###.#.#.....###.#...#...#.#...#...........#.#...#...###...#...###.....#.....#.......#...#...#...#...#.#...#.#',
    '#########.#.#.#.#.#.#.###.#.#.#.###.#.#####v###.#.#####.#.#.#.#v###########.#.#.#.#.###.#.#.#.###.###.#####.#.#####.#.#.#.###.#####.#.#v#.#.#',
    '#.........#.#.#.#...#...#.#.#.#...#.#.....>.>.#.#...#...#.#.#.>.>.........#...#...#.....#...#...#...#.#...#...#.....#.#.#...#.#.....#.>.#...#',
    '#.#########.#.#.#######.#.#.#.###.#.#######v#.#.###.#.###.#.###v#########.#####################.###.#.#.#.#####.#####.#.###.#.#.#######v#####',
    '#.#...#...#.#.#...#.....#.#...###...#.......#.#.###.#...#...#...#.........#...#...#...#.........#...#.#.#.#...#...###.#.###.#...###...#.#...#',
    '#.#.#.#.#.#.#.###.#.#####.###########.#######.#.###.###.#####.###.#########.#.#.#.#.#.#.#########.###.#.#.#.#.###.###.#.###.#######.#.#.#.#.#',
    '#.#.#.#.#.#.#.#...#.....#.....###...#.......#.#...#.#...#.....#...###.......#...#...#...#...#...#...#.#.#.#.#.#...#...#.#...#.....#.#.#...#.#',
    '#.#.#.#.#v#.#.#.#######.#####.###.#.#######.#.###.#.#.###.#####.#####.###################.#.#.#.###.#.#.#.#.#.#.###.###.#.###.###.#.#.#####.#',
    '#.#.#...#.>.#.#.#.......#.....#...#...#...#.#...#.#.#.###.....#.#...#...#...........#...#.#.#.#.###.#.#.#.#.#.#...#...#.#.###...#.#.#...#...#',
    '#.#.#####v###.#.#.#######.#####.#####.#.#.#.###.#.#.#.#######.#.#.#.###.#.#########.#.#.#.#.#.#.###.#.#.#.#.#.###v###.#.#.#####.#.#.###.#.###',
    '#...###...#...#.#.....#...#.....#...#...#.#...#.#.#.#.#.......#...#...#...#...#...#.#.#.#.#.#.#...#.#.#.#.#.#.#.>.>...#...#.....#.#.###.#...#',
    '#######.###.###.#####.#.###.#####.#.#####.###.#.#.#.#.#.#############.#####.#.#.#.#v#.#.#.#.#.###.#.#.#.#.#.#.#.#v#########.#####.#.###.###.#',
    '#...#...###...#.#.....#...#...#...#.#...#.....#...#.#.#.#...###...###...#...#.#.#.>.>.#.#.#.#...#.#.#.#.#...#...#.......#...#...#.#...#.#...#',
    '#.#.#.#######.#.#.#######.###.#.###.#.#.###########.#.#.#.#.###.#.#####.#.###.#.###v###.#.#.###.#.#.#.#.###############.#.###.#.#.###.#.#.###',
    '#.#...#.....#...#.........#...#.#...#.#.....#.....#...#...#...#.#.......#.###...#...###.#.#.#...#...#...###...........#.#...#.#.#.....#.#...#',
    '#.#####.###.###############.###.#.###.#####.#.###.###########.#.#########.#######.#####.#.#.#.#############.#########.#.###.#.#.#######.###.#',
    '#.#...#.#...#.......#.....#.....#.....#...#...#...#...........#...#.....#.#...#...#...#...#...#.....#.....#.........#...###...#.....###.....#',
    '#.#.#.#.#.###.#####.#.###.#############.#.#####.###.#############.#.###.#.#.#.#.###.#.#########.###.#.###.#########.###############.#########',
    '#...#...#...#.....#.#...#.....#.........#.....#...#...........###...###.#.#.#.#.....#...#...###.#...#...#.........#.......#.........#...#####',
    '###########.#####.#.###.#####.#.#############.###.###########.#########.#.#.#.#########.#.#.###.#.#####.#########.#######.#.#########.#.#####',
    '#...#.......#...#.#.###...#...#.............#.#...#...........#...#...#.#.#.#.#...#.....#.#.#...#.#...#.........#.........#...........#.....#',
    '#.#.#.#######.#.#.#.#####.#.###############.#.#.###.###########.#.#.#.#.#.#.#.#.#.#.#####.#.#.###.#.#.#########.###########################.#',
    '#.#...#.....#.#.#.#.#...#.#.#...#...........#...###.............#.#.#.#...#.#...#...###...#.#...#.#.#.###...#...#...###...#.....#...........#',
    '#.#####.###.#.#.#.#.#.#.#.#.#.#.#.###############################.#.#.#####.###########.###.###.#.#.#.###.#.#v###.#.###.#.#.###.#.###########',
    '#.#...#...#.#.#.#.#.#.#.#.#.#.#.#...#####...#.....#...#...........#.#.###...#.....#...#...#...#.#.#.#.#...#.>.>.#.#.###.#.#...#.#...........#',
    '#.#.#.###.#.#.#.#.#.#.#.#.#.#.#.###v#####.#.#.###.#.#.#.###########.#.###.###.###.#.#.###.###.#.#.#.#.#.#####v#.#.#.###.#.###v#.###########.#',
    '#.#.#.#...#.#.#.#.#.#.#...#.#.#...>.>.###.#.#.#...#.#.#...........#.#...#...#...#.#.#.#...###...#.#.#.#...#...#...#...#.#.#.>.#.............#',
    '#.#.#v#.###.#.#.#.#.#.#####.#.#####v#.###.#.#.#.###.#.###########.#.###.###v###.#.#.#.#.#########.#.#.###.#.#########.#.#.#.#v###############',
    '#...#.>.#...#.#.#.#.#.....#.#...#...#...#.#.#.#...#.#.#.........#.#...#...>.>.#.#...#.#.###.......#.#...#.#.....#...#.#.#.#.#.........#...###',
    '#####v###.###.#.#.#.#####.#.###.#.#####.#.#.#.###.#.#.#.#######.#.###.#####v#.#.#####.#.###.#######.###.#.#####.#.#.#.#.#.#.#########.#.#.###',
    '#.....###...#.#.#.#.#...#.#.....#.....#...#.#.#...#.#.#.....###...#...###...#...#...#.#...#.#.....#.#...#.#.....#.#.#...#.#.#.........#.#...#',
    '#.#########.#.#.#.#.#.#.#.###########.#####.#.#.###.#.#####.#######.#####.#######.#.#.###.#.#.###.#.#.###.#.#####.#.#####.#.#.#########.###.#',
    '#.....#...#...#...#.#.#.#.#...........###...#.#...#.#...#...#...###.....#.#...###.#.#.....#...#...#.#.#...#.......#.#...#.#.#.....#...#.#...#',
    '#####.#.#.#########.#.#.#.#.#############.###.###.#.###.#.###.#.#######.#.#.#.###.#.###########.###.#.#.###########.#.#.#.#.#####.#.#.#.#.###',
    '#...#...#.......#...#.#...#.....#...#...#.#...#...#.#...#...#.#.#...#...#.#.#.....#...........#.....#...#...#.....#...#.#.#.#.....#.#...#...#',
    '#.#.###########.#.###.#########.#.#.#.#.#.#.###.###.#.#####v#.#.#.#.#.###.#.#################.###########.#.#.###.#####.#.#.#.#####.#######.#',
    '#.#.............#.....#.........#.#...#.#.#.#...#...#.....>.>.#.#.#...###.#.#.......#.....#...#...........#...###.#.....#...#.....#.#.......#',
    '#.#####################.#########.#####.#.#.#.###.#########v###.#.#######.#.#.#####.#.###.#.###.#################.#.#############.#.#.#######',
    '#.#...#...#...#####...#...#...#...###...#.#.#...#.#.....#...###.#.#.....#...#.....#.#...#...#...#...#...........#.#.....#.......#...#.......#',
    '#.#.#.#.#.#.#.#####.#.###.#.#.#.#####.###.#.###.#.#.###.#.#####.#.#.###.#########.#.###.#####.###.#.#.#########.#.#####.#.#####.###########.#',
    '#.#.#.#.#.#.#...#...#...#...#...#...#...#...#...#.#...#...#...#...#.#...#...###...#.#...#...#.....#...#.........#.......#.#...#.............#',
    '#.#.#.#.#.#.###.#.#####.#########.#.###.#####.###.###.#####.#.#####.#.###.#.###.###.#.###.#.###########.#################.#.#.###############',
    '#...#...#...#...#.#.....#...#...#.#...#.....#.#...#...#...#.#.#...#.#.#...#.#...###...###.#.#...#...###.................#...#...............#',
    '#############.###.#.#####.#.#.#.#.###.#####.#.#.###.###.#.#.#.#.#.#.#.#.###.#.###########.#.#.#.#.#.###################.###################.#',
    '#.............#...#.....#.#.#.#.#...#.#.....#...###.....#.#.#.#.#.#.#.#.#...#...#####...#.#.#.#.#.#.#...#...............###...#.............#',
    '#.#############.#######.#.#.#.#.###.#.#.#################.#.#.#.#.#.#.#.#.#####v#####.#.#.#.#.#.#.#.#.#.#.#################.#.#.#############',
    '#.....#.....###.#.......#.#.#.#...#.#.#...#...#...#...#...#.#...#.#.#.#.#.#...>.>.###.#.#.#...#.#.#.#.#.#.....#...#...#...#.#.#.............#',
    '#####.#.###.###.#.#######.#.#.###.#.#.###.#.#.#.#.#.#.#.###.#####.#.#.#.#.#.###v#.###.#.#.#####.#.#.#.#.#####.#.#.#.#.#.#.#.#.#############.#',
    '#.....#.###...#.#.#...###.#.#...#.#.#.#...#.#.#.#.#.#.#...#.....#.#.#.#.#...#...#...#.#.#.....#.#.#.#.#.#...#.#.#...#.#.#.#.#.#.............#',
    '#.#####.#####v#.#.#.#.###.#.###.#.#.#.#v###.#.#.#.#.#.###v#####.#.#.#.#.#####.#####.#.#.#####.#.#.#.#.#.#.#.#v#.#####.#.#.#.#.#.#############',
    '#.#...#.#...#.>.#...#.#...#...#.#.#.#.>.>...#.#.#.#.#.#.>.>.....#.#.#.#...#...#####.#.#.#.....#.#.#.#.#.#.#.>.>.#.....#.#.#.#.#.........#####',
    '#.#.#.#.#.#.#v#######.#.#####.#.#.#.###v#####.#.#.#.#.#.#v#######.#.#.###.#.#######.#.#.#.#####.#.#.#.#.#.###v###.#####.#.#.#.#########.#####',
    '#.#.#...#.#...#...#...#.....#...#...#...#...#...#...#.#.#.#####...#.#.#...#.....#...#.#.#...#...#.#.#.#.#.###.#...#...#.#.#.#.#...#...#.....#',
    '#.#.#####.#####.#.#.#######.#########.###.#.#########.#.#.#####.###.#.#.#######.#.###.#.###.#.###.#.#.#.#.###.#.###.#.#.#.#.#.#.#.#.#.#####.#',
    '#...###...#...#.#.#...#...#.#.......#...#.#.......###...#.....#.....#.#.#.......#.....#.#...#...#.#...#...#...#...#.#...#.#.#.#.#.#.#.#...#.#',
    '#######.###.#.#.#.###.#.#.#.#.#####.###.#.#######.###########.#######.#.#.#############.#.#####.#.#########.#####.#.#####.#.#.#.#.#.#.#v#.#.#',
    '#.....#.....#.#.#...#.#.#.#.#.#...#...#...#...#...#...........###...#...#.........#...#.#.#.....#.#.........#.....#.....#.#.#.#.#...#.>.#.#.#',
    '#.###.#######.#.###.#.#.#.#.#.#.#.###.#####.#.#.###.#############.#.#############.#.#.#.#.#.#####.#.#########.#########.#.#.#.#.#######v#.#.#',
    '#...#.....#...#.#...#.#.#...#.#.#...#...#...#.#.#...#.....#.....#.#...#...........#.#.#...#.....#.#...#.....#...#...#...#.#.#.#.#.......#...#',
    '###.#####.#.###.#.###.#.#####.#.###.###.#.###.#.#.###.###.#.###.#.###.#.###########.#.#########.#.###.#.###.###.#.#.#.###.#.#.#.#.###########',
    '###.....#...#...#...#.#.....#...###...#.#...#.#.#...#...#...###...#...#.............#.#.....###...###...###...#.#.#.#.#...#.#...#...........#',
    '#######.#####.#####.#.#####.#########.#.###.#.#.###.###.###########.#################.#.###.#################.#.#.#.#.#.###.###############.#',
    '#.......#...#.#.....#.......###...#...#.#...#...#...#...#.....#.....#...#.......#.....#...#.#.........#.......#...#...#.....#.....###.......#',
    '#.#######.#.#.#.###############.#.#.###.#.#######.###.###.###.#.#####.#.#.#####.#.#######.#.#.#######.#.#####################.###.###.#######',
    '#...#.....#...#...........#.....#...###...###...#.....###...#...###...#.#.....#.#.....#...#.#.#.......#.....#####...###...###...#.#...#######',
    '###.#.###################.#.#################.#.###########.#######.###.#####.#.#####.#.###.#.#.###########.#####.#.###.#.#####.#.#.#########',
    '#...#.###...###.........#.#...#.....###.....#.#.#...#.....#.......#.#...###...#...#...#.#...#.#.#...#...###...#...#...#.#.....#.#.#.........#',
    '#.###.###.#.###.#######.#.###.#.###.###.###.#.#.#.#.#.###.#######.#.#.#####.#####.#.###.#.###.#.#.#.#.#.#####.#.#####.#.#####.#.#.#########.#',
    '#.....#...#...#...#...#...###...###...#...#.#.#.#.#.#...#.#...#...#.#.#...#.#####...#...#.#...#.#.#.#.#.#.....#...#...#.#.....#.#.###.......#',
    '#######.#####.###v#.#.###############.###.#.#.#.#.#.###.#.#.#.#v###.#.#.#.#v#########.###.#.###.#.#.#.#.#.#######.#.###.#.#####.#.###v#######',
    '#.......#...#...#.>.#...#...###...#...###.#.#.#.#.#.#...#...#.>.>.#.#.#.#.>.>.###...#...#.#.#...#.#.#.#.#...#...#.#...#.#...#...#...>.#...###',
    '#.#######.#.###.#v#####.#.#.###.#.#.#####.#.#.#.#.#.#.#########v#.#.#.#.###v#.###.#.###.#.#.#.###.#.#.#.###v#.#.#.###.#.###.#.#######v#.#.###',
    '#.........#...#...#.....#.#.###.#...###...#...#.#.#.#.#.........#...#.#...#.#...#.#.#...#.#.#...#.#.#.#.#.>.>.#.#...#.#...#...#.....#...#...#',
    '#############.#####.#####.#.###.#######.#######.#.#.#.#.#############.###.#.###.#.#.#.###.#.###.#.#.#.#.#.#v###.###.#.###.#####.###.#######.#',
    '#...#...#...#...#...#...#.#...#.....#...#.......#.#...#...........#...#...#...#.#.#.#.#...#.#...#.#...#...#.###...#.#.#...#...#...#.#.....#.#',
    '#.#.#.#.#.#.###.#.###.#.#.###.#####.#.###.#######.###############.#.###.#####.#.#.#.#.#.###.#.###.#########.#####.#.#.#.###.#.###.#.#.###.#.#',
    '#.#...#...#.....#...#.#.#.#...#...#.#...#...#...#.#...............#...#...###.#...#...#...#.#.....#...#...#.#...#.#.#...#...#.....#.#...#.#.#',
    '#.#################.#.#.#.#.###.#.#v###.###.#.#.#.#.#################.###.###.###########.#.#######.#.#.#.#.#.#.#.#.#####.#########.###.#.#.#',
    '#.......#.....#...#.#.#...#...#.#.>.>.#...#.#.#...#.#.............#...#...#...#...###...#.#.#.....#.#.#.#.#...#.#.#...#...#.......#...#.#.#.#',
    '#######.#.###.#.#.#.#.#######.#.###v#.###.#.#.#####.#.###########.#.###.###.###.#.###.#.#.#.#.###.#.#.#.#.#####.#.###.#.###.#####.###.#.#.#.#',
    '#.......#.#...#.#.#...#...###.#.#...#...#.#...#.....#.#...........#.#...###.....#.....#.#...#...#...#...#...#...#...#.#.....#.....###...#...#',
    '#.#######.#.###.#.#####.#.###.#.#.#####.#.#####.#####.#.###########.#.#################.#######.###########.#.#####.#.#######.###############',
    '#.#...#...#.....#...#...#...#...#.....#.#.....#.......#.....#.....#...###...#.........#.....###...........#...#...#...###...#...###.........#',
    '#.#.#.#.###########.#.#####.#########.#.#####.#############.#.###.#######.#.#.#######.#####.#############.#####.#.#######.#.###.###.#######.#',
    '#.#.#.#.#...........#.#.....###.......#...#...#...#.........#.#...###.....#...#...###.......#.............#...#.#.###.....#...#.....#...#...#',
    '#.#.#.#.#.###########.#.#######.#########.#.###.#.#.#########.#.#####.#########.#.###########.#############.#.#.#.###.#######.#######.#.#.###',
    '#...#...#.............#...#...#.#.....###...#...#.#...........#.....#.#.........#.......#.....#.....#.......#...#...#...#...#.........#...###',
    '#########################.#.#.#.#.###.#######.###.#################.#.#.###############.#.#####.###.#.#############.###.#.#.#################',
    '#.........#.....#...#...#...#.#.#.#...#...#...#...#.................#...#...#...........#.......###...###.......#...###...#.........#...#...#',
    '#.#######.#.###.#.#.#.#.#####.#.#.#.###.#.#.###.###.#####################.#.#.###########################.#####.#.#################.#.#.#.#.#',
    '#.......#.#...#...#...#.#...#.#...#.....#...#...###.................###...#...#...#...#...###.............#...#...#...#...........#...#...#.#',
    '#######.#.###.#########.#.#.#.###############.#####################.###.#######.#.#.#.#.#.###.#############.#.#####.#.#.#########.#########.#',
    '#.......#...#.........#.#.#.#...#...#.........#...#...........#...#.#...#.......#.#.#.#.#...#.....#...#...#.#.#...#.#.#.........#.#...#.....#',
    '#.#########.#########.#.#.#.###.#.#.#.#########.#.#.#########.#.#.#.#.###.#######.#.#.#.###.#####.#.#.#.#.#.#.#.#.#.#.#########.#.#.#.#.#####',
    '#.........#...........#...#.....#.#...###...###.#.#.........#.#.#.#.#.....###.....#.#.#.#...#...#.#.#.#.#...#.#.#.#.#...#...#...#.#.#.#.....#',
    '#########.#######################.#######.#.###.#.#########.#.#.#.#.#########v#####.#.#.#.###.#.#.#.#.#.#####.#.#.#.###.#.#.#.###.#.#.#####.#',
    '#...#...#...............#.........#.......#...#.#.#...#.....#...#...#.......>.>.#...#...#...#.#.#...#...#.....#.#.#.#...#.#.#...#...#.......#',
    '#.#.#.#.###############.#.#########.#########.#.#.#.#.#.#############.#########.#.#########.#.#.#########.#####.#.#.#.###.#.###v#############',
    '#.#...#.................#...........#...#.....#.#...#.#.......#...#...#.....#...#...#.......#.#...#...#...#...#.#...#.#...#...>.###...#...###',
    '#.###################################.#.#.#####.#####.#######.#.#.#.###.###.#.#####.#.#######.###.#.#.#.###.#.#.#####.#.#######v###.#.#.#.###',
    '#.#...#.....#...###.....#...#...#.....#.#...###.#...#.#...#...#.#.#.....#...#...#...#...#...#.#...#.#.#...#.#.#...#...#.###...#.###.#.#.#.###',
    '#.#.#.#.###.#.#.###.###.#.#.#.#.#.#####.###.###.#.#.#.#.#.#.###.#.#######.#####.#.#####.#.#.#.#.###.#.###v#.#.###.#.###.###.#.#.###.#.#.#.###',
    '#...#...###.#.#...#.#...#.#.#.#.#.....#...#.#...#.#...#.#.#.#...#.###...#.....#.#.#####.#.#.#.#...#.#.#.>.>.#.#...#...#.#...#...#...#.#.#.###',
    '###########.#.###.#.#.###.#.#.#.#####.###.#.#.###.#####.#.#.#.###.###.#.#####.#.#.#####.#.#.#.###.#.#.#.#####.#.#####.#.#.#######.###.#.#.###',
    '#...........#...#...#.....#.#.#.#.....###...#...#.#...#.#.#.#...#.#...#.#...#.#...#.....#.#.#...#.#.#.#.....#.#.....#...#...#...#...#.#.#...#',
    '#.#############.###########.#.#.#.#############.#.#.#.#.#.#v###.#.#.###.#.#.#.#####.#####.#.###.#.#.#.#####.#.#####.#######.#.#.###.#.#.###.#',
    '#.#...#.....#...###.........#.#.#.....#...#...#.#.#.#...#.>.>.#.#.#.###.#.#.#.....#.....#.#...#.#.#.#.#...#.#.......#.......#.#...#.#.#...#.#',
    '#.#.#.#.###.#.#####.#########.#.#####v#.#.#.#.#.#.#.#########.#.#.#.###.#.#.#####.#####.#.###.#.#.#.#.#.#.#.#########.#######.###.#.#.###.#.#',
    '#.#.#.#.#...#.#.....#...#...#.#.#...>.>.#.#.#.#.#.#.......#...#.#.#.#...#.#.#...#...#...#...#.#.#.#.#.#.#.#.......#...#...#...#...#.#...#.#.#',
    '#.#.#.#.#.###.#.#####.#.#.#.#.#.#.#######.#.#.#.#.#######.#.###.#.#.#.###.#.#.#.###.#.#####.#.#.#.#.#.#.#.#######.#.###.#.#.###.###.###.#.#.#',
    '#...#...#.....#.......#...#...#...#######...#...#.........#.....#...#.....#...#.....#.......#...#...#...#.........#.....#...###.....###...#.#',
    '###########################################################################################################################################.#',
];

const addNewRoute = (route, direction, text = false) => {
	let newRoute, nextChar;
	switch (direction) {
  	case 'up':
        nextChar = `r${route.r - 1}c${route.c}`;
    	newRoute = { ...route, visited: text ? route.visited += nextChar : [...route.visited, nextChar], steps: route.steps + 1, r: route.r - 1, c: route.c };
        break;
  	case 'right':
        nextChar = `r${route.r}c${route.c + 1}`;
    	newRoute = { ...route, visited: text ? route.visited += nextChar : [...route.visited, nextChar], steps: route.steps + 1, r: route.r, c: route.c + 1 };
        break;
  	case 'down':
        nextChar = `r${route.r + 1}c${route.c}`;
    	newRoute = { ...route, visited: text ? route.visited += nextChar : [...route.visited, nextChar], steps: route.steps + 1, r: route.r + 1, c: route.c };
        break;
  	case 'left':
        nextChar = `r${route.r}c${route.c - 1}`;
    	newRoute = { ...route, visited: text ? route.visited += nextChar : [...route.visited, nextChar], steps: route.steps + 1, r: route.r, c: route.c - 1 };
        break;
  }
  return newRoute;
};

const test1 = (input) => {
    const startR = 0;
    const startC = 1;
    const endR = input.length - 1;
    const endC = input[0].length - 2;
    const startString = `r${startR}c${startC}`;
    const endString = `r${endR}c${endC}`;

    let routes = [{ r: startR, c: startC, steps: 0, visited: [startString] }];
    while (routes.some((route) => !route.complete)) {
        let newRoutes = [];
        for (let route of routes) {
          let directions = [];
        	if (!route.deadend && !route.complete) {
                let nextR, nextC, nextSpace, nextChar;
                
                // up
                nextR = route.r - 1;
                nextC = route.c;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextR >= 0 && !route.visited.includes(nextSpace)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar === '.' || nextChar === '^') {
                        directions.push('up');
                    }
                }
                
                // right
                nextR = route.r;
                nextC = route.c + 1;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextC < input[0].length && !route.visited.includes(nextSpace)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar === '.' || nextChar === '>') {
                        directions.push('right');
                    }
                }
                
                // down
                nextR = route.r + 1;
                nextC = route.c;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextR < input.length && !route.visited.includes(nextSpace)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar === '.' || nextChar === 'v') {
                        directions.push('down');
                    }
                }
                
                // left
                nextR = route.r;
                nextC = route.c - 1;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextC >= 0 && !route.visited.includes(nextSpace)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar === '.' || nextChar === '<') {
                        directions.push('left');
                    }
                }  
          }
          if (!directions.length) {
            if (route.visited.includes(endString)) {
                route.complete = true;
                if (!newRoutes.some((rt) => rt.complete && rt.steps > route.steps)) {
                    newRoutes.push(route);
                }
            }
          } else {
          	for (let direction of directions) {
          		newRoutes.push(addNewRoute(route, direction));
            }
          }        
        }
        routes = [...newRoutes];
    }
    
    return(Math.max(...routes.filter((route) => route.complete).map((route) => route.steps)));
}

console.log('Answer - Part 1 - Input 1');
console.log(test1(input1));
// 94
console.log('Answer - Part 1 - Input 2');
console.log(test1(input2));
// 1998

const test2 = (input) => {
    const startR = 0;
    const startC = 1;
    const endR = input.length - 1;
    const endC = input[0].length - 2;
    const startString = `r${startR}c${startC}`;
    const endString = `r${endR}c${endC}`;

    let routes = [{ r: startR, c: startC, steps: 0, visited: startString }];
    while (routes.some((route) => !route.complete)) {
        let newRoutes = [];
        for (let route of routes) {
          let directions = [];
        	if (!route.deadend && !route.complete) {
                let nextR, nextC, nextSpace, nextChar;
                
                // up
                nextR = route.r - 1;
                nextC = route.c;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextR >= 0 && !(route.visited.indexOf(nextSpace) >= 0)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar !== '#') {
                        directions.push('up');
                    }
                }
                
                // right
                nextR = route.r;
                nextC = route.c + 1;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextC < input[0].length && !(route.visited.indexOf(nextSpace) >= 0)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar !== '#') {
                        directions.push('right');
                    }
                }
                
                // down
                nextR = route.r + 1;
                nextC = route.c;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextR < input.length && !(route.visited.indexOf(nextSpace) >= 0)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar !== '#') {
                        directions.push('down');
                    }
                }
                
                // left
                nextR = route.r;
                nextC = route.c - 1;
                nextSpace = `r${nextR}c${nextC}`;
                if (nextC >= 0 && !(route.visited.indexOf(nextSpace) >= 0)) {
                    nextChar = input[nextR][nextC];
                    if (nextChar !== '#') {
                        directions.push('left');
                    }
                }  
          }
          if (!directions.length) {
            if (route.visited.indexOf(endString) >= 0) {
                route.complete = true;
                if (!newRoutes.some((rt) => rt.complete && rt.steps > route.steps)) {
                    newRoutes.push(route);
                }
            }
          } else {
          	for (let direction of directions) {
          		newRoutes.push(addNewRoute(route, direction, true));
            }
          }        
        }
        routes = [...newRoutes];
    }
    
    return(Math.max(...routes.filter((route) => route.visited.indexOf(endString) >= 0 && route.complete).map((route) => route.steps)));
}

console.log('Answer - Part 2 - Input 1');
console.log(test2(input1));
// 154
console.log('Answer - Part 2 - Input 2');
console.log(test2(input2));
// 
